const fs = require('fs')
const path = require('path')

const BUNDLE_FILE = path.resolve(__dirname, '../src/app.bundle.js')
const BUNDLE_FILE_WRITE_STREAM = fs.createWriteStream(BUNDLE_FILE, { flags: 'w' })

function append({ content, filename, dirname }) {
  if (filename) {
    console.log(`appending ${filename}`)
    BUNDLE_FILE_WRITE_STREAM.write(`/************************ ${filename} ************************/\n`)
    BUNDLE_FILE_WRITE_STREAM.write(
      fs.readFileSync(filename).toString()
    )
    BUNDLE_FILE_WRITE_STREAM.write(`/******************** EOF ${filename} ************************/\n`)
  } else if (dirname) {
    const files = fs.readdirSync(dirname)
    for (const filename of files) {
      const filepath = path.resolve(dirname, filename)
      const stat = fs.lstatSync(filepath)

      if (stat.isFile() && filename.endsWith('.js')) {
        append({filename: filepath})
      }
    }
  } else {
    BUNDLE_FILE_WRITE_STREAM.write(`/************************ - ************************/\n`)
    BUNDLE_FILE_WRITE_STREAM.write(
      content
    )
    BUNDLE_FILE_WRITE_STREAM.write(`/******************** EOF - ************************/\n`)
  }
}

console.log(`clearing ${BUNDLE_FILE}`)

BUNDLE_FILE_WRITE_STREAM.write('/** This script is generated by scripts/build-app.js */\n\n')

append({ filename: path.resolve(__dirname, `../src/entry.js`) })
append({ filename: path.resolve(__dirname, `../src/dict.js`) })
append({ filename: path.resolve(__dirname, `../src/scheme-list.js`) })
append({ filename: path.resolve(__dirname, `../src/mode-list.js`) })
append({ filename: path.resolve(__dirname, `../src/keyboard-layout-list.js`) })
append({ filename: path.resolve(__dirname, `../src/core.js`) })
append({ filename: path.resolve(__dirname, `../src/setting.js`) })
append({ filename: path.resolve(__dirname, `../src/action.js`) })
append({ dirname: path.resolve(__dirname, `../src/scheme`) })
append({ dirname: path.resolve(__dirname, `../src/keyboard-layout`) })
append({ content: 'Shuang.app.action.init()\n' })

BUNDLE_FILE_WRITE_STREAM.end()

console.log(`bundled: ${BUNDLE_FILE}`)